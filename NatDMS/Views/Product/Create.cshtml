@model NatDMS.Models.Product

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
       @* @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
        {*@
        <form enctype="multipart/form-data" asp-action="Create" asp-controller="Product" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
         
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                @Html.DropDownListFor(model => model.Category, new SelectList(Model.Categorylist, "Id", "CategoryName"),
                "--Select Category--", new { @id = "state", onchange = "statechange()", @class = "form-select" })
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product1" class="control-label"></label>
               @* <input asp-for="Product1" class="form-control" />*@
                @Html.TextBoxFor(model => model.Product1, new { @class = "form-control",
                placeholder = "Enter UserName", onfocus = "movePlaceholder(this)" })
                <span asp-validation-for="Product1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                @*<input asp-for="Price" class="form-control" />*@
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control",
                placeholder = "Enter UserName", onfocus = "movePlaceholder(this)" })
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                @*<input asp-for="Quantity" class="form-control" />*@
                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control",
                placeholder = "Enter UserName", onfocus = "movePlaceholder(this)" })
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
              @*  <input asp-for="Weight" class="form-control" />*@
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control",
                placeholder = "Enter UserName", onfocus = "movePlaceholder(this)" })
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="UploadImage" class="control-label">Choose image</label>
                <input asp-for="UploadImage" class="form-control custom-file-input" type="file" id=“fileInput”>
               
               
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-outline-danger">SUBMIT</button>
            </div>
            @*}*@
        </form>
    </div>
   
        <script src="~/js/jquery-3.6.0.min.js"></script>
        <script type="text/javascript">
        $(document).ready(function () {
            // Bind change event to file input
            $(‘#fileInput’).change(function () {
                // Display image preview
                displayImagePreview();
            });
            // Function to display image preview
            function displayImagePreview() {
                var input = $(‘#fileInput’)[0];
                var preview = $(‘#imagePreview’)[0];
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $(preview).html(‘<img src=“’ + e.target.result + ‘” class=“img-thumbnail” alt=“Image Preview” />‘);
                    };
                    reader.readAsDataURL(input.files[0]);
                } else {
                    $(preview).html(‘’);
                }
            }
        });
    </script>
    
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
