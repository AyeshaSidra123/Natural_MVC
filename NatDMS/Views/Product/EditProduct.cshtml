@model NatDMS.Models.EditProduct

@{
    ViewData["Title"] = "EditProduct";
}



<!DOCTYPE html>

<html lang="en">
<head>

    <link rel="stylesheet" type="text/css" href="~/css/dm-project-style.css">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"><script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    @*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">*@


</head>

<body>

    @using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { @class = "needs-validation", enctype = "multipart/form-data", novalidate = "novalidate" }))
    {
        <div class="row justify-content-center">
            <div class="col-md-4">
                @Html.Hidden("Id", Model.Id)


                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.Categorylist, "Id", "CategoryName"),
                    "--Select category--", new { @id = "category", @class = "form-select" })

                    </b>
                </div>

                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.ProductName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })

                    </b>
                </div>
                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })

                    </b>
                </div>
                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.Quantity, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })

                    </b>
                </div>

                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.Weight, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
                    </b>
                </div>







                <div class="form-group">


                    <label for="presignedurl-label" class="control-label" id="image" style="font-weight: bold;">  <span>@Model.ProductName</span></label>


                    @if (!string.IsNullOrEmpty(@Model.Image))
                    {

                        <img src="@Model.Image" alt="ProfileImage" width="200" height="200" class="img-responsive" onclick="confirmDelete('@Model.Id', true)" id="presignedurl" enabled>

                    }
                    else
                    {
                        <!-- Display a default "no image" placeholder -->
                        <img class="img-responsive" src="~/image/no-image-placeholder.svg" alt="ProfileImage" width="200" height="200" class="img-responsive" onclick="confirmDelete('@Model.Id', true)" id="presignedurl" enabled>
                    }



                    <i class="bi bi-image"></i>
                </div>

                <div class="form-group" id="fileInputContainer">
                    <label asp-for="UploadImage" class="control-label">Choose image</label>
                    <input asp-for="UploadImage" class="form-control custom-file-input" type="file" id="fileInput" disabled onchange="ShowImagePreview(this)">

                </div>
                <div class="col-md-4" id="imagePreviewContainer" style="display:none;">

                    <img src="#" alt="preview" id="imagePreview" style="border: 1px solid red; height: 169px; width: 176px; margin: auto; display: block;" />


                </div>





                <div id="deleteConfirmationModal_@Model.Id" class="modal" style="display:none">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Delete Confirmation</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">


                                @if (!string.IsNullOrEmpty(@Model.Image))
                                {

                                    <img src="@Model.Image" alt="ProfileImage" width="200" height="200" class="img-responsive" onclick="confirmDelete('@Model.Id', true)" id="presignedurl" enabled>

                                }
                                else
                                {
                                    <!-- Display a default "no image" placeholder -->
                                    <img class="img-responsive" src="~/image/no-image-placeholder.svg" alt="ProfileImage" width="200" height="200" class="img-responsive" onclick="confirmDelete('@Model.Id', true)" id="presignedurl" enabled>
                                }

                                <p>Are you sure you want to delete this item?</p>
                            </div>
                            <div class="modal-footer">


                                <button type="button" class="btn btn-secondary" onclick="cancelDelete('@Model.Id', true)">No</button>

                                <button type="button" class="btn btn-danger" onclick="deleteItem('@Model.Id')">Yes</button>
                            </div>
                        </div>
                    </div>
                </div>
             </div>
            <div class="form-group d-flex justify-content-center" style="margin-top: 10px;">
                <button type="submit" class="btn btn-outline-danger">SUBMIT</button>
            </div>


        </div>

    }


    <div class="row">
        <div class="col-md-10 d-flex justify-content-between">
            <a href="@Url.Action("EditProduct")" class="d-flex align-items-center mr-6">
                <i class="material-icons" style="font-size:20px;">refresh</i>
                <span class="ml-2" style="font-weight: bold;">RESET</span>
            </a>

            <a href="@Url.Action("DisplayProduct")" class="d-flex align-items-center">
                <i class="material-icons" style="font-size:20px;">arrow_back</i>
                <span class="ml-2" style="font-weight: bold;">BACK TO LIST</span>
            </a>
        </div>
        <script src="~/js/jquery-3.6.0.min.js"></script>


        <script>var isDeleteSuccessful = false;
    function confirmDelete(id) {
        var modal = $('#deleteConfirmationModal_' + id);
        modal.modal('show');
    }
    function cancelDelete(id) {
          var model=  $('#deleteConfirmationModal_' + id).modal('hide');
        }
    var isDeleteSuccess = false;
        function deleteItem(id) {
            $.ajax({
                url: '/Product/Delete', 
                type: 'POST',
                data: { Id:'@Model.Id' },
                success: function (result) {
                    console.log('Item deleted successfully');
                    $('#deleteConfirmationModal_' + id).modal('hide');
                    isDeleteSuccessful = true;
                    enableForm();
                    disableImage();
                },
                error: function (error) {
                    console.error('Error deleting item', error);
                }
            });
        }

    function enableForm() {
            if (isDeleteSuccessful) {
                $('#fileInput').prop('disabled', false);

            }
        }
        $(document).ready(function () {
            enableForm();
        });
    $(document).ready(function () {
        disableImage();
    });
    function disableImage() {
        if (isDeleteSuccessful) {
            $('#presignedurl').off('click');            $('#presignedurl').css('pointer-events', 'none'); 
            $('#presignedurl').attr('src', '');             $('#presignedurl').css('display', 'none');
            $('#image').css('display', 'none');
        }
    }
    function ShowImagePreview(input) {
        debugger;
        if (input.files && input.files[0]) {
            var fname = input.files[0].name;
            var re = /(\.jpg|\.jpeg|\.bmp|\.gif|\.png)$/i;
            if (!re.exec(fname)) {
                alert("Image not supported!");
                $("#fileInput").val("");
                $("#imagePreviewContainer").hide();
                return false;
            }
            else {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').prop('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
                $("#imagePreviewContainer").show();
            }
        }
    }
        </script>
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
        <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.2/jquery.validate.min.js"></script>
        <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate.unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#Price, #Quantity, #Weight').on('keypress', function (e) {
                    var keyCode = e.which || e.keyCode;
                    var value = $(this).val();

                    if (!(keyCode >= 48 && keyCode <= 57) &&

                        keyCode !== 46 ||
                        (keyCode === 46 && value.includes('.'))) {
                        e.preventDefault();
                    }
                });

                $('#Price, #Quantity, #Weight').on('input', function () {
                    var value = $(this).val();
                    var newValue = value.replace(/[^0-9.]/g, '');


                    var parts = newValue.split('.');
                    if (parts.length > 2) {
                        newValue = parts[0] + '.' + parts.slice(1).join('');
                    }

                    $(this).val(newValue);
                });
            });
        </script>



    </div>
</body>
</html>



